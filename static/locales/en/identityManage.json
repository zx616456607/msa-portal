{
  "identityZones": {
    "addIdentityZone": "Add",
    "refresh": "Refresh",
    "searchByName": "Please enter a identity zone",
    "totalData": "Total {{total}} item",
    "identityName": "identity zone name",
    "refreshTime": "Update",
    "operate": "Operation",
    "editorRow": "Edit",
    "delRow": "Delete",
    "watchDetail": "View Details",
    "checkIdentityStatus": "The identity server is not available，please check the status of the server"
  },
  "delIdentityZones": {
    "delIdentityZones": "Delete identity zone",
    "willDelIdentityZones": "Are you sure you want to delete this identity zone?",
    "delDonestReset": "Tips: Can not be restored after deletion",
    "delSuccessful": "Delete successfully",
    "delFailed": "Delete failed"
  },
  "addIdentityZones": {
    "addIdentityZones": "Add identity zone",
    "editorIdentityZones": "Edit",
    "identityZonesName": "identity zone name",
    "inputZonesName": "Please enter identity zone name",
    "input255Char": "The name can be composed of 1~255letters",
    "notInpChar": "Don’t enter the letters % and _",
    "inputSubDomainName": "Please enter SubDomain name",
    "desc": "Description",
    "inputDesc": "Please enter description",
    "identityZonesRepeat": "The identity zone name have already exist",
    "changeZoneFailed": "Edit identity zone failed",
    "changeZoneSuccess": "Edit identity zone successfully",
    "createZoneFailed": "Create identity zone failed",
    "createZoneSuccess": "Create identity zone successfully"
  },
  "authModeTable": {
      "authMode": "Mode",
      "desc": "Description",
      "normalAuth": "Authorization Code",
      "simpleAuth": "Implicit",
      "secretsAuth": "Resource Owner Password Credentials",
      "appSecretsAuth": "Client Credentials"
    },
  "authScope": {
    "authRange": "Scopes",
    "desc": "Description",
    "allAuth": "This scope indicates that this is a user",
    "thisAppDontOpeartor": "This scope indicates that this client will not be performing actions on behalf of a user.",
    "superAuth": "This scopes indicates that this is the superuser.",
    "crossManageSystem": "This scope gives admin write access to all SCIM endpoints，/Users, and /Groups",
    "canUserAndGroup": "This scope gives admin read access to all SCIM endpoints，/Users, and /Groups",
    "donotDelCouldSend": "This scope gives the ability to create a user with a POST request to the /Users endpoint, but not to modify, read, or delete users.",
    "nameIDTransform": "This scope is required to convert a username and origin into a user ID and vice versa.",
    "inviteUsersEndpoint": "This scope is required to participate in invitations using the /invite_users endpoint.",
    "canRefreshGroup": "This scope gives the ability to update a group. This ability can also be provided by the broader scim.write scope.",
    "canChangeSecrets": "This admin scope gives the ability to change a user’s password.",
    "beUsedToGetUserInfo": "This scope is required to access the /userinfoendpoint. It is intended for OpenID clients.",
    "couldReadandCheck": "This scope gives read access to retrieve identity providers from the /identity-providersendpoint.",
    "couldAddandRefresh": "This scope gives the ability to create and update identity providers from the /identity-providersendpoint.",
    "anyOAuthApp": "This scope gives the ability to create, modify, and delete clients.",
    "someOAuthApp": "This scope is required to create and modify clients. The scopes are prefixed with the scope holder’s client ID.",
    "getUserAccountInfo": "This scope gives the ability to read information about clients.",
    "changeMyselfSecrets": "This admin scope is required to change the password of a client.",
    "getUserAuthZoneInfo": "This scope is required to invoke the /identity-zones endpoint to read identity zones",
    "addAndChangeAuthZoneInfo": "This scope is required to invoke the /identity-zones endpoint to create and update identity zones.",
    "someZoneCouldAdd": "This is a limited scope that only allows adding a user to, or removing a user from, zone management groups under the path /Groups/zones",
    "defaultAuthUserOperator": "This scope is required to approve or reject clients to act on a user’s behalf. This is a default scope defined in the uaa.yml file.",
    "beUsedToLoginApp": "This scope is used to indicate a login app, such as external login servers, can perform trusted operations, such as creating users not authenticated in the UAA.",
    "beUsedToCheckResource": "This scope indicates that this is a resource server, used for the /check_token endpoint.",
    "authZoneOperatorInRange": "This scope permits operations in a designated zone, such as creating identity providers or clients in another zone, by authenticating against the default zone.",
    "shouldGetSomeAuthZoneInfo": "This scope permits reading the given identity zone. ",
    "changeRangeEqualadmin": "This scope translates into clients.admin after zone switch completes.",
    "changeRangeEqualread": "This scope translates into clients.read after zone switch completes. ",
    "changeRangeEqualwrite": "This scope translates into clients.write after zone switch completes",
    "changeRangeEqualScimRead": "This scope translates into scim.read after zone switch completes",
    "changeRangeEqualScimCreate": "This scope translates into scim.create after zone switch completes.",
    "changeRangeEqualScimWrite": "This scope translates into scim.write after zone switch completes",
    "changeRangeEqualIdpsRead": "This scope translates into idps.read after zone switch completes. "
  }
}